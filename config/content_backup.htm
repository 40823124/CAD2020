<h1>MDE</h1>
<p><span size="5" style="font-size: x-large;"><span color="brown" style="color: brown;">廖璟程40823124</span></span></p>
<p><img height="400" src="https://www.verdict.co.uk/wp-content/uploads/2017/09/giphy-downsized-large.gif" width="600"/></p>
<p><h7>副標題必須搭配中文</h7></p>
<hr/>
<p><a href="https://www.youtube.com/channel/UCiADs8ujLZRPFNU6lo-s8cg?view_as=subscriber" target="40823124youtube" title="youtube"><img height="50" src="https://lh3.googleusercontent.com/lMoItBgdPPVDJsNOVtP26EKHePkwBg-PkuY9NOrc-fumRtTFP4XhpUNk_22syN4Datc" width="50"/>youtube</a><a href="https://github.com/40823124" target="40823124github" title="github"><img height="50" src="https://miro.medium.com/max/796/0*YawwWWRvQDU4ls2w.jpg" width="100"/>github</a></p>
<p></p>
<h1>課堂簡介</h1>
<p>紀錄每次課堂所學</p>
<h2>第一周</h2>
<p><span size="3px" style="font-size: medium;">Cmsimde建立網站</span></p>
<p>1.安裝隨身開發環境<a href="https://drive.google.com/a/gm.nfu.edu.tw/uc?id=1fKXXLc2P7hQb3spsmD1HM9Uljy3gvcMc&amp;export=download">full2020_cp.7z</a></p>
<p>2.安裝git套件<a href="https://github.com/git-for-windows/git/releases/download/v2.28.0.windows.1/PortableGit-2.28.0-64-bit.7z.exe">portableGit</a>放入data</p>
<p>3.修改start.bat內啟動路徑</p>
<p><img alt="" height="738" src="/images/portableGit.png" width="559"/></p>
<p>4.設定.gitconfig存放於home目錄 <br/> <img alt="" height="426" src="/images/gitconfig.png" width="559"/></p>
<p>5.建立github倉儲並clone至資料夾內</p>
<p></p>
<p><img alt="" height="268" src="/images/gitclone.png" width="559"/></p>
<p>6.將cmsimde架站器加入至cad2020目錄下</p>
<p></p>
<p><img alt="" height="128" src="/images/git submodule.png" width="559"/></p>
<p>7.將cmsimde中up_dir目錄下檔案全部移至cad2020目錄下<img alt="" height="559" src="/images/up_dir.png" width="1176"/></p>
<p>8.安裝pip套件 :flask、flask_cors、lxml、bs4、pelican、markdown、leo <br/> 9.開啟wsgi.py 開始編輯近端網頁</p>
<p></p>
<h2>第四周</h2>
<p>使用wlink</p>
<p>nx介紹</p>
<p><iframe height="680" src="https://drive.google.com/file/d/1bfMycjGqSLzatQWEXcoshGCMSZ8OxLVD/preview" width="640"></iframe></p>
<h2>第五周</h2>
<p>What is API</p>
<p><img src="https://www.redhat.com/cms/managed-files/what-are-apis-370x226_0.png"/></p>
<p>API是指應用程式介面，在網頁和程式中扮演介面和資料庫的橋樑，當點擊連結後將資料從資料庫中回傳至使用者介面中供使用者觀看。</p>
<h2>第六周</h2>
<p>利用inventor內建API"iLogic"功能，使用基礎迴圈遞增多種尺寸以快速建立模型</p>
<p><img alt="" height="600" src="/images/api.gif" width="900"/></p>
<p>以c#編寫</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">//40823124編寫
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
int s=0;//形式 
int i;
int start = 1;
int end;//遞增64次
int L,W,H;//基礎長寬高 
int l2,w2,h2;//增加值 
int d3 = 0;
int d12 =10;
int main(void){
	printf("輸入初始長度\n");
		scanf("%d",&amp;L);
	printf("輸入初始寬度\n");
		scanf("%d",&amp;W);
	printf("輸入初始高度\n");
		scanf("%d",&amp;H);
	printf("輸入長度增值\n");
		scanf("%d",&amp;l2);
	printf("輸入寬度增值\n");
		scanf("%d",&amp;w2);
	printf("輸入高度增值\n");
		scanf("%d",&amp;h2);
	printf("輸入遞增次數\n");
		scanf("%d",&amp;end);
		printf("列印:\n");
  for(i=1;i &lt;= end ;i++){ //使用迴圈遞增64次
    L=L+l2;//每次增加
    W=W+w2;//每次增加
    H=H+h2;//每次增加
    s=s+1;//每次增加
    d3=d3+0;//不變
    printf("If Style = %d Then \n Leight = %d \n Width = %d \n Height = %d \n d3 = %d \n d11 = %d \n volume = iProperties.Volume \n Volume = volume \n Parameter.UpdateAfterChange = True \n End If \n",s,L,W,H,d3,d12); //列印inventor可支援語言 
  }
  printf("點擊以結束\n");
  system("pause");
  return 0;//返回
  
}
</stdlib.h></math.h></stdio.h></pre>
<h2>第七周</h2>
<p><b>使用Visual Studio .NET (VB)</b></p>
<p>編寫API</p>
<p><img alt="" height='"594' src="/images/vb1.png" width="1066"/></p>
<p>簡易UI</p>
<p><img alt="" height="594" src="/images/vb2.png" width="1066"/></p>
<p>連動Inventor參數實現數值繪圖</p>
<p><img alt="" height="594" src="/images/vb3.png" width="1066"/></p>
<h2>第十三周</h2>
<p>控制物體單一軸向移動</p>
<p>物體和關節設置主從關係，將物體至於關節下，並將物體固定在關節上</p>
<p><img alt="" height="950" src="/images/cs1.png" width="1756"/></p>
<p>控制語言為Lua</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==2010) then
                    -- up key
                    velocity=100
                    torque=200
                    hammer_back = 0
                end
                if (auxiliaryData[1]==2009) then
                    -- down key
                     velocity = -100
                     torque=-200
                     hammer_back = 1
                end
               
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
 
        -- We take care of setting the desired hammer position:
        if hammer_back == 1
            --then sim.setObjectPosition(hammer,-1, position)
           then sim.setJointPosition(joint, -1, orientation)
        end
        sim.setJointTargetVelocity(joint,velocity)
 
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint')
hammer=sim.getObjectHandle('hammer')
velocity=0
hammer_back=0
position=sim.getObjectPosition(hammer,-1)
 
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:
</pre>
<h2>第十四周</h2>
<p>控制物體單軸向旋轉</p>
<p>但目前只能朝一方向轉動一部分角度，待日後除錯</p>
<p><img alt="" height="950" src="/images/cs2.png" width="1756"/></p>
<p>程式以Lua撰寫</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==119) then
                    -- up key
                    velocity=100
                    torque=200
                    hammer_back = 0
                end
                if (auxiliaryData[1]==115) then
                    -- down key
                     hammer_back = 1
                     torque=-200
                     velocity = -100
                end
               
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
 
        -- We take care of setting the desired hammer position:
        if hammer_back == 1
            then 
               sim.setJointPosition(joint, -1, orientation)
               --sim.setObjectPosition(hammer,-1, position)
        end
        sim.setJointTargetPosition(joint, velocity)
        --sim.setJointForce(joint,torque)
        
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint1')
hammer=sim.getObjectHandle('bat')
velocity=0
hammer_back=0
torque=0
orientation=sim.getJointPosition(joint, -1)
position=sim.getObjectPosition(hammer,-1)
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
 
-- Put some clean-up code here:
</pre>
<h1>HomeWork</h1>
<p>每次課堂作業</p>
<h2>第1周</h2>
<p>體積試算表</p>
<hr/>
<p><img alt="" height="1662" src="/images/體積.png" width="541"/></p>
<hr/>
<h2>第4周</h2>
<p>NX更新心得</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/cL8RSB-dvxU" width="560"></iframe></p>
<p>NX12更新後統一稱為NX，不是NX13<br/> 使用者UI有多種可更換<br/> 更加合適的解析度<br/> 取消 增強功能*<br/> 零組件可以設定密碼保護</p>
<h1>程式</h1>
<h2>inventor iLogic in Dart</h2>
<p><iframe height="600" src="https://mde.tw/dartpad/?id=5e9c8acde3c42f620d2e610664815049" width="800"></iframe></p>
<h2>inventor in c#</h2>
<p>此種方法僅為土炮方法，並不實用</p>
<p>以C#編寫</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">//40823124編寫
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
int s=0;//形式 
int i;
int start = 1;
int end;//遞增64次
int L,W,H;//基礎長寬高 
int l2,w2,h2;//增加值 
int d3 = 0;
int d12 =10;
int main(void){
	printf("輸入初始長度\n");
		scanf("%d",&amp;L);
	printf("輸入初始寬度\n");
		scanf("%d",&amp;W);
	printf("輸入初始高度\n");
		scanf("%d",&amp;H);
	printf("輸入長度增值\n");
		scanf("%d",&amp;l2);
	printf("輸入寬度增值\n");
		scanf("%d",&amp;w2);
	printf("輸入高度增值\n");
		scanf("%d",&amp;h2);
	printf("輸入遞增次數\n");
		scanf("%d",&amp;end);
		printf("列印:\n");
  for(i=1;i &lt;= end ;i++){ //使用迴圈遞增64次
    L=L+l2;//每次增加
    W=W+w2;//每次增加
    H=H+h2;//每次增加
    s=s+1;//每次增加
    d3=d3+0;//不變
    printf("If Style = %d Then \n Leight = %d \n Width = %d \n Height = %d \n d3 = %d \n d11 = %d \n volume = iProperties.Volume \n Volume = volume \n Parameter.UpdateAfterChange = True \n End If \n",s,L,W,H,d3,d12); //列印inventor可支援語言 
  }
  printf("點擊以結束\n");
  system("pause");
  return 0;//返回
  
}
</stdlib.h></math.h></stdio.h>
</pre>
<p>執行</p>
<p><img alt="" height="474" src="/images/iLogic執行.jpg" width="900"/></p>
<h1>錯誤和除錯</h1>
<h2>旋轉測試error</h2>
<p>發覺棒子只能朝同方向旋轉一部分角度</p>
<p><img alt="" height="950" src="/images/cs2.png" width="1756"/></p>
<p>發現轉軸與棒子軸向不符合</p>
<p><img alt="" height="1107" src="/images/cs3.png" width="1756"/></p>